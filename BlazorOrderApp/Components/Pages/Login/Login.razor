@using BlazorOrderApp.Services
@using BlazorOrderApp.Components.Layout
@page "/login"
@layout EmptyLayout
@inject NavigationManager NavigationManager
@inject MyAuthenticationService AuthService
@attribute [AllowAnonymous]
@* rendermodeは Static Server 固定 *@


@if (NavigationManager.Uri.Contains("expired=1"))
{
    <div class="alert alert-warning">
        セッションの有効期限が切れました。再度ログインしてください。
    </div>
}

<div class="d-flex justify-content-center" style="margin-top: 120px;">
    <div class="card shadow-sm" style="width: 360px;">
        <div class="card-body">
            <span class="bi-user-circle me-3" style="font-size:2rem; vertical-align:middle;"></span>
            <h4 class="card-title text-center d-inline align-middle" style="margin:0;">受注管理デモ ログイン</h4>
            <div class="mb-4"></div>
            <EditForm Model="@loginUser" FormName="login-form" OnValidSubmit="LoginAsync">
                <div class="mb-3">
                    <label for="username" class="form-label">ユーザー名</label>
                    <InputText id="username" @bind-Value="loginUser.UserName" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">パスワード</label>
                    <InputText id="password" @bind-Value="loginUser.Password" class="form-control" type="password" />
                </div>
                <button type="submit" class="btn btn-primary w-100">ログイン</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private LoginModel loginUser { get; set; } = new();

    // ログインページ表示時に念の為にログアウト
    protected override async Task OnInitializedAsync()
    {
        await AuthService.LogoutAsync();
    }

    private async Task LoginAsync()
    {
        var success = await AuthService.LoginAsync(loginUser);
        if (success)
        {
            NavigationManager.NavigateTo("", forceLoad: true);
        }
    }
}
