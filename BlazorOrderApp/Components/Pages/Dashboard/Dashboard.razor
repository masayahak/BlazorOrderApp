@page "/dashboard"
@using BlazorOrderApp.Models
@using BlazorOrderApp.Repositories

<div class="mb-3">
    <label>集計期間：</label>
    <div class="btn-group" role="group" aria-label="集計期間">
        <button type="button"
                class="btn btn-outline-secondary @(SelectedPeriod == "1w" ? "active" : "")"
                @onclick='() => SelectedPeriod = "1w"'>
            1週間
        </button>
        <button type="button"
                class="btn btn-outline-secondary @(SelectedPeriod == "1m" ? "active" : "")"
                @onclick='() => SelectedPeriod = "1m"'>
            1か月
        </button>
        <button type="button"
                class="btn btn-outline-secondary @(SelectedPeriod == "3m" ? "active" : "")"
                @onclick='() => SelectedPeriod = "3m"'>
            3か月
        </button>
        <button type="button"
                class="btn btn-outline-secondary @(SelectedPeriod == "6m" ? "active" : "")"
                @onclick='() => SelectedPeriod = "6m"'>
            6か月
        </button>
        <button type="button"
                class="btn btn-outline-secondary @(SelectedPeriod == "1y" ? "active" : "")"
                @onclick='() => SelectedPeriod = "1y"'>
            1年
        </button>
    </div>
</div>

<h5 class="mt-4">受注金額推移</h5>
<div style="min-width:100%; min-height:320px; width:100%; background:rgba(0,0,0,0.01);">
    @if (GraphData != null)
    {
        <ApexChart TItem="日別受注金額Model" Height="320" @ref="chart">
            <ApexPointSeries TItem="日別受注金額Model"
                             Items="GraphData"
                             Name="受注金額"
                             SeriesType="SeriesType.Bar"
                             XValue="e => e.受注日ラベル"
                             YValue="e => e.受注金額" />
        </ApexChart>
    }
    else
    {
        <div style="height:320px;display:flex;align-items:center;justify-content:center;">
            <span>データ取得中...</span>
        </div>
    }
</div>

<h5 class="mt-4">得意先・商品 上位（受注金額ベース）</h5>
<div class="row">
    <div class="col-md-6 mb-3">
        <div style="min-width:100%; min-height:320px; width:100%; background:rgba(0,0,0,0.01);">
            @if (CustomerRanking != null)
            {
                <ApexChart TItem="得意先別受注金額Model" Height="320" @ref="customerPieChart">
                    <ApexPointSeries TItem="得意先別受注金額Model"
                                     Items="CustomerRanking"
                                     Name="受注金額"
                                     SeriesType="SeriesType.Pie"
                                     XValue="x => x.得意先名"
                                     YValue="x => x.受注金額" />
                </ApexChart>
            }
            else
            {
                <div style="height:320px;display:flex;align-items:center;justify-content:center;">
                    <span>データ取得中...</span>
                </div>
            }
        </div>
    </div>
    <div class="col-md-6 mb-3">
        <div style="min-width:100%; min-height:320px; width:100%; background:rgba(0,0,0,0.01);">
            @if (ProductRanking != null)
            {
                <ApexChart TItem="商品別受注金額Model" Height="320" @ref="productPieChart">
                    <ApexPointSeries TItem="商品別受注金額Model"
                                     Items="ProductRanking"
                                     Name="受注金額"
                                     SeriesType="SeriesType.Pie"
                                     XValue="x => x.商品コード名称"
                                     YValue="x => x.受注金額" />
                </ApexChart>
            }
            else
            {
                <div style="height:320px;display:flex;align-items:center;justify-content:center;">
                    <span>データ取得中...</span>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Inject]
    public IOrderAnalysisRepository OrderAnalysisRepo { get; set; } = default!;

    private string _selectedPeriod = "1w";
    private string SelectedPeriod
    {
        get => _selectedPeriod;
        set
        {
            if (_selectedPeriod != value)
            {
                _selectedPeriod = value;
                _ = LoadDataAsync();
            }
        }
    }

    private List<日別受注金額Model>? GraphData;
    private List<得意先別受注金額Model>? CustomerRanking;
    private List<商品別受注金額Model>? ProductRanking;

    private ApexChart<日別受注金額Model>? chart;
    private ApexChart<得意先別受注金額Model>? customerPieChart;
    private ApexChart<商品別受注金額Model>? productPieChart;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        var endDate = DateTime.Today;
        var startDate = SelectedPeriod switch
        {
            "1w" => endDate.AddDays(-7),
            "1m" => endDate.AddMonths(-1),
            "3m" => endDate.AddMonths(-3),
            "6m" => endDate.AddMonths(-6),
            "1y" => endDate.AddYears(-1),
            _ => endDate.AddMonths(-1)
        };

        bool isWeekly = SelectedPeriod is "3m" or "6m" or "1y";
        if (isWeekly)
            GraphData = (await OrderAnalysisRepo.Get週別受注金額Async(startDate, endDate)).ToList();
        else
            GraphData = (await OrderAnalysisRepo.Get日別受注金額Async(startDate, endDate)).ToList();
    
        CustomerRanking = (await OrderAnalysisRepo.Get得意先別受注金額Async(startDate, endDate)).ToList();
        ProductRanking = (await OrderAnalysisRepo.Get商品別受注金額Async(startDate, endDate)).ToList();

        if (chart != null) await chart.UpdateSeriesAsync();
        if (customerPieChart != null) await customerPieChart.UpdateSeriesAsync();
        if (productPieChart != null) await productPieChart.UpdateSeriesAsync();
    }
}
